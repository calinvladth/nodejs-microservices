services:
  nginx:
    image: nginx
    ports:
      - "3000:3000"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - customer
      - email

  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  customer:
    image: ghcr.io/calinvladth/customer_service:latest
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=$JWT_SECRET
      - DB_HOST=db
      - DB_USER=$POSTGRES_USER
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_DATABASE=$CUSTOMER_SERVICE_DB
      - MESSAGE_QUEUE_URL=$MESSAGE_QUEUE_URL
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  email:
    image: ghcr.io/calinvladth/email_service:latest
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MESSAGE_QUEUE_URL=$MESSAGE_QUEUE_URL
      - SMTP_SERVICE=$SMTP_SERVICE
      - SMTP_PORT=$SMTP_PORT
      - SMTP_HOST=$SMTP_HOST
      - SMTP_SECURE=$SMTP_SECURE
      - SMTP_USER=$SMTP_USER
      - SMTP_PASSWORD=$SMTP_PASSWORD
    depends_on:
      rabbitmq:
        condition: service_healthy

  db:
    container_name: db
    build:
      context: ./database
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    expose:
      - 5432
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  db-data:
